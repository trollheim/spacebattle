{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/postregistration/postregistration.component.ts","webpack:///src/app/postregistration/postregistration.component.html","webpack:///src/app/registration-api.service.ts","webpack:///src/app/registration/registration.component.ts","webpack:///src/app/registration/registration.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AppComponent","rest","title","errors","request","username","password","verify","inviteCode","length","push","self","createUser","result","handleResponse","err","response","window","location","href","selector","templateUrl","styleUrls","AppModule","declarations","imports","providers","bootstrap","PostregistrationComponent","RegistrationApiService","http","registrationDto","post","toPromise","providedIn","RegistrationComponent","environment","production","bootstrapModule","console","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\nimport { RegistrationApiService } from './registration-api.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  \n   constructor(private rest:RegistrationApiService) { }\n\n  title = 'registration';\n  \n  errors = []\n\n  request = {\n    username : \"\",\n    password : \"\",\n    verify : \"\",\n    inviteCode :\"\"\n  }\n\n  createUser(){\n    \n    if (this.request.username.length === 0){\n      this.errors.push(\"Username not populated\")\n    }\n    if (this.request.password.length === 0){\n      this.errors.push(\"Password not populated\")\n    }\n    if (this.request.verify.length === 0){\n      this.errors.push(\"Password verify not populated\")\n    }\n    if (this.request.inviteCode.length === 0){\n      this.errors.push(\"Invite Code not populated\")\n    }\n    if (this.request.password !== this.request.verify){\n      this.errors.push(\" Password does not match\")\n    }\n\n    if (this.errors.length !== 0){\n      return\n    }\n\n    var self = this;\n    this.rest.createUser(this.request).then(result => self.handleResponse(result)).catch(err => self.errors = [err[\"message\"]])\n    \n  }\n\n  handleResponse(response){\n    if (response[\"RESULT\"] !== \"OK\"){\n      this.errors = [response[\"MESSAGE\"]];\n      return;\n    }\n    //TODO popup\n\n    window.location.href = \"/\"\n  }\n\n   \n\n  ngOnInit(): void {\n  }\n}\n","<div class=\"card card-body bg-light\">\n<div class=\"jumbotron jumbotron-fluid\">\n    <div class=\"container\">\n      <h1 class=\"display-4\">Registration</h1>\n      <p class=\"lead\">Submit form to register user.</p>\n    </div>\n  </div>\n\n  \n     <div class=\"form-group\">\n      <label for=\"emailInput\">Username</label>\n      <input [(ngModel)]=\"request.username\" type=\"text\" class=\"form-control\" id=\"emailInput\" placeholder=\"Enter username\">\n    </div>\n    <div class=\"form-group\">\n        <label for=\"passwordInput\">Password</label>\n        <input [(ngModel)]=\"request.password\" type=\"password\" class=\"form-control\" id=\"passwordInput\" placeholder=\"Enter password\">\n      </div>\n      <div class=\"form-group\">\n        <label for=\"passwordVerifyInput\">Verify Password</label>\n        <input [(ngModel)]=\"request.verify\" type=\"password\" class=\"form-control\" id=\"passwordVerifyInput\" placeholder=\"Re-enter password\">\n      </div>\n      <div class=\"form-group\">\n        <label for=\"registrationCodeInput\">Invide Code</label>\n        <input [(ngModel)]=\"request.inviteCode\" type=\"text\" class=\"form-control\" id=\"registrationCodeInput\" placeholder=\"Enter invite code\">\n      </div>\n    <button  (click)=\"createUser()\" type=\"button\" class=\"btn btn-primary btn-lg btn-block\" >Submit</button>\n    <br/>\n    <div  *ngIf=\"errors.length>0\" class=\"alert alert-danger\" role=\"alert\">\n        <p *ngFor=\"let err of errors\">\n            {{err}}\n         </p>\n      </div>\n\n </div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n \nimport { AppComponent } from './app.component';\nimport { RegistrationComponent } from './registration/registration.component';\nimport { PostregistrationComponent } from './postregistration/postregistration.component';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { HttpClientModule } from '@angular/common/http';\n@NgModule({\n  declarations: [\n    AppComponent,\n    RegistrationComponent,\n    PostregistrationComponent,\n    \n  ],\n  imports: [\n    BrowserModule,\n    \n    NgbModule,\n    FormsModule,\n    HttpClientModule\n    ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-postregistration',\n  templateUrl: './postregistration.component.html',\n  styleUrls: ['./postregistration.component.css']\n})\nexport class PostregistrationComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>postregistration works!</p>\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RegistrationApiService {\n\n  constructor(private http: HttpClient) { }\n\n  async  createUser(registrationDto: any){\n    return await this.http.post(\"/userAPI/register\", registrationDto).toPromise();\n   }\n}\n","import { ReturnStatement } from '@angular/compiler';\nimport { Component, OnInit, Input } from '@angular/core';\nimport {RegistrationApiService} from '../registration-api.service'\n\n@Component({\n  selector: 'app-registration',\n  templateUrl: './registration.component.html',\n  styleUrls: ['./registration.component.css']\n})\nexport class RegistrationComponent implements OnInit {\n\n  constructor(private rest:RegistrationApiService) { }\n\n  errors = []\n\n  request = {\n    username : \"\",\n    password : \"\",\n    verify : \"\",\n    inviteCode :\"\"\n  }\n\n  createUser(){\n    \n    if (this.request.username.length === 0){\n      this.errors.push(\"Username not populated\")\n    }\n    if (this.request.password.length === 0){\n      this.errors.push(\"Password not populated\")\n    }\n    if (this.request.verify.length === 0){\n      this.errors.push(\"Password verify not populated\")\n    }\n    if (this.request.inviteCode.length === 0){\n      this.errors.push(\"Invite Code not populated\")\n    }\n    if (this.request.password !== this.request.verify){\n      this.errors.push(\" Password does not match\")\n    }\n\n    if (this.errors.length !== 0){\n      return\n    }\n\n    var self = this;\n    this.rest.createUser(this.request).then(result => self.handleResponse(result)).catch(err => self.errors = [err[\"message\"]])\n    \n  }\n\n  handleResponse(response){\n    if (response[\"RESULT\"] !== \"OK\"){\n      this.errors = [response[\"MESSAGE\"]];\n      return;\n    }\n    //TODO popup\n\n    window.location.href = \"/\"\n  }\n\n   \n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"card card-body bg-light\">\n<div class=\"jumbotron jumbotron-fluid\">\n    <div class=\"container\">\n      <h1 class=\"display-4\">Registration</h1>\n      <p class=\"lead\">Submit form to register user.</p>\n    </div>\n  </div>\n\n  \n     <div class=\"form-group\">\n      <label for=\"emailInput\">Username</label>\n      <input [(ngModel)]=\"request.username\" type=\"text\" class=\"form-control\" id=\"emailInput\" placeholder=\"Enter username\">\n    </div>\n    <div class=\"form-group\">\n        <label for=\"passwordInput\">Password</label>\n        <input [(ngModel)]=\"request.password\" type=\"password\" class=\"form-control\" id=\"passwordInput\" placeholder=\"Enter password\">\n      </div>\n      <div class=\"form-group\">\n        <label for=\"passwordVerifyInput\">Verify Password</label>\n        <input [(ngModel)]=\"request.verify\" type=\"password\" class=\"form-control\" id=\"passwordVerifyInput\" placeholder=\"Re-enter password\">\n      </div>\n      <div class=\"form-group\">\n        <label for=\"registrationCodeInput\">Invide Code</label>\n        <input [(ngModel)]=\"request.inviteCode\" type=\"text\" class=\"form-control\" id=\"registrationCodeInput\" placeholder=\"Enter invite code\">\n      </div>\n    <button  (click)=\"createUser()\" type=\"button\" class=\"btn btn-primary btn-lg btn-block\" >Submit</button>\n    <br/>\n    <div  *ngIf=\"errors.length>0\" class=\"alert alert-danger\" role=\"alert\">\n        <p *ngFor=\"let err of errors\">\n            {{err}}\n         </p>\n      </div>\n\n </div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}